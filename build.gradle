plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.mysite'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

// thymeleaf - 라이브러리 2개
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	
	// Spring MVC 개발 환경 
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	// devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	// h2 DataBase 
	runtimeOnly 'com.h2database:h2'
	
	// JPA 
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	//JDBC
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'


	// QueryDSL Setting (라이브러리) 
		// Querydsl 추가 : spring 3.0 , jdk 17
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

tasks.named('test') {
	useJUnitPlatform()
}


// queryDSL Setting

//Q클래스, Q도메인 : @Entity 클래스이름앞에 Q클래스가 자동으로 생성될 위치 
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir]
}

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslDir)
}

// Q클래스 삭제 : 원본(Entity 클래스가) 이 수정 변경이 되면 삭제후 새로 생성해야함. 
clean.doLast {
	file(querydslDir).deleteDir()
}




